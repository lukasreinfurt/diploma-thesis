# Multiple VMs can be defined here
vms = [
	{
		:name            => 'thesis_dev',
		:playbook        => 'thesis_dev',
		:box             => 'precise32',
		:url             => 'http://files.vagrantup.com/precise32.box',
		:memory          => 256,
		:forwarded_ports => [],
		:synced_folders  => [
			{:host => './ansible', :guest => '/ansible'},
			{:host => '../diploma thesis', :guest => '/thesis'}
		]
	},
	{
		:name            => 'impl_dev',
		:playbook        => 'impl_dev',
		:box             => 'precise32',
		:url             => 'http://files.vagrantup.com/precise32.box',
		:memory          => 512,
		:forwarded_ports => [],
		:synced_folders  => [
			{:host => './ansible', :guest => '/ansible'},
			{:host => '../implementation', :guest => '/impl'}
		]
	},
	{
		:name            => 'opentosca',
		:playbook        => 'opentosca',
		:box             => 'precise64',
		:url             => 'http://files.vagrantup.com/precise64.box',
		:memory          => 2048,
		:forwarded_ports => [],
		:ip              => "192.168.80.80",
		:synced_folders  => [
			{:host => './ansible', :guest => '/ansible'},
			{:host => '../../files', :guest => '/files'}
		]
	}
]

# Loop through vms array and create all VMs
Vagrant.configure("2") do |config|
	vms.each do |vm|
		config.vm.define vm[:name] do |vm_config|
			# Configure box settings
			vm_config.vm.box     = vm[:box]
			vm_config.vm.box_url = vm[:url]

			# Forward ports
			vm[:forwarded_ports].each do |port|
				vm_config.vm.network :forwarded_port, guest: port[:guest], host: port[:host]
			end

			# Enable private network
			if vm[:ip]
				config.vm.network "private_network", ip: vm[:ip]
			end

			# Set up synced folders
			vm[:synced_folders].each do |synced_folder|
				vm_config.vm.synced_folder synced_folder[:host], synced_folder[:guest]
			end

			# Configure VM parameters
			vm_config.vm.provider :virtualbox do |vb|
				vb.gui    = false
				vb.name   = vm[:name]
				vb.memory = vm[:memory]
			end

			# Setup Ansible
			$setup_script = <<-SCRIPT
			if hash ansible-playbook 2>/dev/null; then
				echo "Ansible installation found."
			else
				echo "No Ansible installation found. Installing now...";
				sudo apt-get update;
				sudo apt-get -y install python-software-properties;
				sudo apt-get -y install ansible;
				echo localhost > /etc/ansible/hosts;
			fi
			SCRIPT

			vm_config.vm.provision :shell, :inline => $setup_script

			# Run Ansible
			$run_script = <<-SCRIPT
			sudo ansible-playbook /ansible/#{vm[:playbook]}.yml
			SCRIPT

			vm_config.vm.provision :shell, :inline => $run_script
		end
	end
end
